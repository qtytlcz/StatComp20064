)
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
species_col
devtools::document()
devtools::build_vignettes()
iris <- datasets::iris
iris2 <- iris[, -5]
species_labels <- iris[, 5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM:
pairs(
iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2
)
devtools::document()
devtools::build_vignettes()
devtools::check()
devtools::check()
setwd("C:/Users/lcz2016/Desktop/StatComp20064")
devtools::install_github("Sakura-X-Sshly/StatComp20005",build_vignettes = TRUE,force=T)
devtools::install_github("Sakura-X-Sshly/StatComp20005",build_vignettes = F,force=T)
devtools::document()
devtools::install_github("zhanghfd/statcomp",
build_vignettes = TRUE,force=T)
devtools::install_github("zhanghfd/statcomp",
build_vignettes = TRUE,force=T)
devtools::install_github("liwenyi6/StatComp20030",build_vignettes = TRUE,force=T)
devtools::install_github("Sakura-X-Sshly/StatComp20005",build_vignettes = F,force=T)
devtools::install_github("zhanghfd/statcomp",build_vignettes = TRUE,force=T)
library("StatComp", lib.loc="E:/R-4.0.2/library")
remove.packages("StatComp")
devtools::install_github("zhanghfd/statcomp",build_vignettes = TRUE,force=T)
devtools::install_github("liwenyi6/StatComp20030",build_vignettes = F,force=T)
remove.packages("StatComp20030")
x=c(162,267,271,185,111,61,27,8,3,1)
x[1]
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:length(x)
a <- 0.5 ; mu1 <- x[1] ; mu2 <- x[2];
t <- function(a=0.5,m1=1,m2=3){
b <- NULL
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
b
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
d <- 0:length(x)
a <- 0.5 ; mu1 <- x[1] ; mu2 <- x[2];
t <- function(a=0.5,m1=1,m2=3){
b <- NULL
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
b
}
y <- x*t(a,mu1,mu2)
y
t(a,mu1,mu2)
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
b
}
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
b
}
t(a,mu1,mu2)
d <- 0:length(x)
a <- 0.5 ; mu1 <- x[1] ; mu2 <- x[2];
t(a,mu1,mu2)
a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
b
}
}
length(x)
d <- 0:(length(x)-1)
a <- 0.5 ; mu1 <- x[1] ; mu2 <- x[2];
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
b
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
t(a,mu1,mu2)
a <- 0.5 ; mu1 <- 0 ; mu2 <- 0;
a <- 0.4 ; mu1 <- 0 ; mu2 <- 0;
t(a,mu1,mu2)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 1;
t(a,mu1,mu2)
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
a
mu1
mu2
x <- c(162,267,271,185,111,61,27,8,3,1)
d <- 0:9
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a=0.5,m1=1,m2=3){
b <- NULL
for(i in 1:10){b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))}
b
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
(c(a,mu1,mu2))
a
iris <- datasets::iris
iris2 <- iris[, -5]
species_labels <- iris[, 5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM:
pairs(
iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2
)
iris <- datasets::iris
iris2 <- iris[, -5]
species_labels <- iris[, 5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM:
pairs(
iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2
)
iris <- datasets::iris
iris2 <- iris[, -5]
species_labels <- iris[, 5]
library(colorspace) # get nice colors
species_col <- rev(rainbow_hcl(3))[as.numeric(species_labels)]
# Plot a SPLOM:
pairs(
iris2,
col = species_col,
lower.panel = NULL,
cex.labels = 2,
pch = 19,
cex = 1.2
)
t(a,mu1,mu2)
a <- 0.4 ; mu1 <- x[1] ; mu2 <- x[2];
t(a,mu1,mu2)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 1;
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
t(a,mu1,mu2)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
x*t(a,mu1,mu2)
t(a,mu1,mu2)
x
BinaryPoisson(x)
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:(length(x)-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
d <- 0:(length(x)-1)
d
y
d%*%y
sum(y)
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:(length(x)-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
d%*%y
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:(length(x)-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
BinaryPoisson()
y <- x*t(a,mu1,mu2)
y
z <- x-y
z
a <- sum(y)/sum(x)
a
x=c(162,267,271,185,111,61,27,8,3,1)
d <- 0:(length(x)-1)
d
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
print(a)
}
d%*%y
d
y
x*t(a,mu1,mu2)
x
t(a,mu1,mu2)
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:(length(x)-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:10000){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
print(a)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
d <- 0:(length(x)-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:length(x)){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:10){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
print(a)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
print(a)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <- 3;
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n)){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(x)
BinaryPoisson(c(105,509,420,320,210,90,50,44,32,25,10))
BinaryPoisson(c(1050,5090,4200,3200,2100,900,500,440,320,250,100))
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- min(x) ; mu2 <-max(x);
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n)){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(c(1050,5090,4200,3200,2100,900,500,440,320,250,100))
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- min(x) ; mu2 <-mean(x);
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n)){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(c(1050,5090,4200,3200,2100,900,500,440,320,250,100))
x <- c(1050,5090,4200,3200,2100,900,500,440,320,250,100)
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- min(x) ; mu2 <-mean(x);
t(a,mu1,mu2)
BinaryPoisson<-function(x=c(162,267,271,185,111,61,27,8,3,1)){
n <- length(x)
d <- 0:(n-1)
a <- 0.4 ; mu1 <- 1 ; mu2 <-3;
t <- function(a,m1,m2){
b <- x
for(i in 1:n){
b[i] <- a*exp(-m1)*m1^(i-1)/(a*exp(-m1)*m1^(i-1)+(1-a)*exp(-m2)*m2^(i-1))
}
b
}
for(j in 1:(100*n)){
y <- x*t(a,mu1,mu2)
z <- x-y
a <- sum(y)/sum(x)
mu1 <- d%*%y/sum(y)
mu2 <- d%*%z/sum(z)
}
return(list(a=a,mu1=mu1,mu2=mu2))
}
BinaryPoisson(c(105,115,160,190,250,420,320,210,90,50,44,32,25,10))
BinaryPoisson(c(1,3,6,9,10,30,60,90,120,180,300,600,700,690,500,200,100))
devtools::document()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::check()
getwd()
devtools::build()
install.packages('../StatComp20064_1.0.tar.gz',repo=NULL)
library("StatComp20064", lib.loc="E:/R-4.0.2/library")
remove.packages("StatComp20064")
